*npm create vite . => React => JavaScript
*npm install
*npm run dev
*npm i react-router-dom

    In main.jsx add:
    import { BrowserRouter } from "react-router-dom";
    <BrowserRouter>
        <App />
    </BrowserRouter> 

    in App.jsx import:
    import { Routes } from 'react-router-dom'

react-router-dom е библиотека за маршрутизация в React приложенията. Тя предоставя компоненти, 
които позволяват на React приложенията да имат динамична навигация, като променят този, което 
потребителят вижда на екрана в зависимост от URL адреса.
Някои от основните компоненти, предоставени от react-router-dom, включват:

1.BrowserRouter: Обгражда цялото приложение и предоставя контекст за компонентите за маршрутизация.

2.Route: Дефинира маршрут, свързан с даден компонент. Когато пътят в URL съвпадне с дефинирания в 
Route, съответният компонент се рендери.

3.Link: Предоставя линк, който променя URL адреса без да презарежда цялата страница. Това е особено
 полезно за създаване на навигационни връзки в приложението ви.

4.Switch: Обгражда Route компоненти и гарантира, че се рендери само първият компонент, който съвпада с текущия път в URL.

5.Redirect: Пренасочва потребителя към друг URL адрес. Използва се, например, за редирект при неправилно въведени URL адреси.

react-router-dom улеснява реализацията на навигацията в React приложението ви и помага в управлението 
на състоянието на приложението в зависимост от текущия URL адрес.




*npm run lint
npm run lint изпълнява линт проверка върху кода във вашия проект. 
Линтингът е процес, при който се анализира изходния код срещу определени правила или стилове, 
с цел намиране и коригиране на потенциални проблеми, грешки или несъответствия със зададени стандарти.

При React проекти, често се използва инструмент за линтинг като ESLint, който е настроен с правила, 
специфични за React и JavaScript/TypeScript. ESLint може да предупреди за стилове на кодиране, 
използване на най-добри практики, недостатъци в кода и други аспекти, които подобряват четливостта и поддръжката на проекта.

Използването на npm run lint обикновено изпълнява инструмента за линтинг (като ESLint) върху вашия 
код и извежда предупреждения или грешки в конзолата. Ако проектът ви използва ESLint, можете да видите 
и конфигурацията му във вашия package.json файл или в отделен файл (например, .eslintrc.js или .eslintrc.json).





Използване на Fortawesome:
*npm install --save @fortawesome/fontawesome-svg-core @fortawesome/free-solid-svg-icons @fortawesome/react-fontawesome

*npm install --save @fortawesome/fontawesome-svg-core @fortawesome/free-brands-svg-icons @fortawesome/react-fontawesome

// Вашият React компонент
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faCoffee } from '@fortawesome/free-solid-svg-icons';

import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faFacebook } from '@fortawesome/free-brands-svg-icons';


В jsx code:
<FontAwesomeIcon icon={faCoffee} />

<FontAwesomeIcon icon={faFacebook} />

Добавяне в index.html:
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha384-rFIE2ziYYLHZd4z3nVps/0MXDq2JswSMkQf6Y4gncNIn4d1knqXb95mcvY3e5FdS" crossorigin="anonymous">

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" integrity="sha384-rFIE2ziYYLHZd4z3nVps/0MXDq2JswSMkQf6Y4gncNIn4d1knqXb95mcvY3e5FdS" crossorigin="anonymous">

